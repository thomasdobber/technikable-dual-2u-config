/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/34.h"

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH1 LH0 RH0 RH1                                              // thumbs

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &dual_2u_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <14 15 16>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <21 20 19>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 19>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB               &kp Q  &kp W     &kp E     &kp R        &kp T               &kp Y  &kp U   &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL ESC  &kp A  &kp S     &kp D     &kp F        &kp G               &kp H  &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT GRAVE       &kp Z  &kp X     &kp C     &kp V        &kp B               &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                             &kp LALT  &kp LGUI  &lt 1 SPACE         &lt 2 SPACE         &trans  &mo 3
            >;
        };

        num_layer {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans          &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHFT  &trans          &trans  &kp N4  &kp N5  &kp N6  &kp N0  &trans
&trans  &trans     &trans    &trans    &trans     &trans          &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
                   &trans    &trans    &trans             &trans          &trans  &trans
            >;

            label = "NUM";
        };

        sym_layer {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans          &trans  &kp MINUS  &kp UP    &kp EQUAL  &trans         &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHFT  &trans          &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &kp BACKSLASH  &trans
&trans  &trans     &trans    &trans    &trans     &trans          &trans  &kp GRAVE  &kp LBKT  &kp RBKT   &trans         &trans
                   &trans    &trans    &trans             &trans          &trans     &trans
            >;

            label = "SYM";
        };

        bluetooth_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans          &trans          &trans  &trans
            >;

            label = "BLT";
        };
    };
};
