/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick_tap_ms = <200>;
    bindings = <&mo>, <&sk>;
};

/ {
    chosen { zmk,matrix_transform = &dual_2u_transform; };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <14 15 16>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <21 20 19>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 19>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB               &kp Q  &kp W     &kp E     &kp R      &kp T               &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL ESC  &kp A  &kp S     &kp D     &kp F      &kp G               &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT GRAVE       &kp Z  &kp X     &kp C     &kp V      &kp B               &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                             &kp LALT  &kp LGUI  &kp SPACE         &lt 1 RSHFT         &to 2  &mo 3
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp MINUS  &kp UP    &kp EQUAL  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &trans    &kp GRAVE
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans     &kp LBKT  &kp RBKT   &kp BSLH  &trans
                &trans  &trans  &trans          &trans          &trans     &trans
            >;

            label = "SYM";
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp N1     &kp N2   &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp N4     &kp N5   &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &kp N7     &kp N8   &kp N9  &trans  &trans
                &trans  &trans  &to 0           &kp N0          &kp COMMA  &kp DOT
            >;

            label = "NUM";
        };

        bluetooth_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans          &trans          &trans  &trans
            >;

            label = "BLT";
        };
    };
};
